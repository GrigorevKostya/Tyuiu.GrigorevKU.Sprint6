<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxTask_GKU.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAYQAAAAxCAYAAADazd6hAAAABGdBTUEAALGPC/xhBQAAGNlJREFUeF7t
        3WWMZMXbBfD9xicgSPhCCPxJkBCCBQnuENzdYYHF3d3d3d3d3d3d3d1d631/la3N3Z7bcnu6Z7qXOsnN
        zHRfrXrqnEeq7owIGRk1+PHHH8PTTz8d7rvvvvDtt9+Gf/75Z/Q3w4effvopvPLKK+GRRx4JX3zxRfj7
        779HfzPu45tvvglPPfVUuPXWW+Pzf/755+HPP/8c/W0G/Pvvv+Hnn3+Odvvcc8+FL7/8cvQ3GVWQBSEj
        IyMjIyILQkZGRkZGRBaEjIyMjIyILAgZGRkZGRFZEIYJv//+e3jzzTfD+eefH7bbbrswatSocOyxx4Yn
        nngiFgwVyYYSrvfLL7+EJ598Mtx1113hjTfeaFq49b397O84xw/1fWdkZHQOWRCGAYjUjJkrrrginHba
        aeGII44Ie+yxR9h6663D4YcfHt59993w119/jd67OYjLSy+9FB588ME4I6XqrCD7m7ljVtFNN90U7r//
        /vDBBx80PY/v7Wf/m2++OTzwwAPhq6++6olZSRkZGdWRBWEYIAJ49NFHwyWXXBJefPHF8Mcff4RPP/00
        RggjR44M99xzTyT5VsEzv/POO8N5550XPvroo8pTMn/44Yfw2GOPhWOOOSb+/P7770d/0xrs//jjj4cT
        TjghRjimrWZkZPQfsiD0CIjCtddeGyOF6667Lvz666/xcykY0YI51t99911cF4DAf/vttzHf+RsJO0c6
        xveO8ZPH7qf9zOcvzmG378svvxzF6YILLojHFEFcfOY453cu1/S3cybxsY/jnUf0k1NHGRn9hywIPQIC
        IIW05557xhRMihB8blHSzjvvHOaee+4w66yzhjXXXDNceOGF0TN//vnnw2qrrRY22GCDGCUgbMJx5pln
        hl122SWmpD788MMYPay66qoxLSUCSYTt/Ndff3046qijojAUxYIASF8RKXWOG264IaaERDXbb799FIB3
        3nkn7us49yLKueWWWypFOBkZGb2BLAg9AsR69tlnx7TNxx9/PMbzRsiEYt999w2XXXZZJGHkjeB55V9/
        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
        zwgAAAAASUVORK5CYII=
</value>
  </data>
</root>